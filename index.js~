//Import Express modules
const express = require('express');
const expressEdge = require('express-edge');
const path = require('path');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const Post = require('./db/models/Post');
const fileUpload = require('express-fileupload');
const expressSession = require('express-session');
const connectMongo = require('connect-mongo');
const auth = require('./middleware/auth');
const connectFlash = require('connect-flash');
const redirectIfAuthenticated = require('./middleware/redirectIfAuthenticated');
const edge = require('edge.js');
const storePost = require('./middleware/storePost');

//Import controllers
const createPostController = require('./controllers/createPost');
const homePageController = require('./controllers/homePage');
const storePostController = require('./controllers/storePost');
const getPostController = require('./controllers/getPost');
const createUserController = require('./controllers/createUser');
const storeUserController = require('./controllers/storeUser');
const loginController = require('./controllers/login');
const loginUserController = require('./controllers/loginUser');

//Initialize the express app
const app = new express();


//Connecte to MongoDB database
mongoose.connect('mongodb://localhost:27017/node-blog', { useNewUrlParser: true, useUnifiedTopology: true })
	.then(() => console.log("You are now connected to Mongo!"))
	.catch(err => console.log("Something went wrong!", err));

const mongoStore = connectMongo(expressSession);

//Use Express Session package
app.use(expressSession({
	secret: 'secret',
	store: new mongoStore({
		mongooseConnection: mongoose.connection
	})
}));

//Use the modules
app.use(fileUpload());
app.use(express.static('public')); //Use 'public' directory to store static assets
app.use(expressEdge.engine);
app.set('views', __dirname + '/views'); 
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({
	extended: true
}));
app.use(connectFlash());
app.use('*', (req, res, next) => {
	edge.global('auth', req.session.userId)
	next()
});


//With the use of controllers:
app.get('/', homePageController);
app.get('/post/:id', getPostController);
app.get('/posts/new', auth, createPostController);
app.post('/posts/store', storePost, storePostController);
app.get('/auth/register', redirectIfAuthenticated, createUserController);
app.post('/users/register', redirectIfAuthenticated, storeUserController);
app.get('/auth/login', redirectIfAuthenticated, loginController);
app.post('/users/login', redirectIfAuthenticated, loginUserController);

//Other routes
app.get('/index.html', (req, res) => {
	res.sendFile(path.resolve(__dirname, 'pages/index.html'));
});

app.get('/about.html', (req, res) => {
	res.sendFile(path.resolve(__dirname, 'pages/about.html'));
});

app.get('/contact.html', (req, res) => {
	res.sendFile(path.resolve(__dirname, 'pages/contact.html'));
});

app.get('/post.html', (req, res)  => {
	res.sendFile(path.resolve(__dirname, 'pages/post.html'));
});

app.listen(3000, () => {
	console.log("App listening on port 3000");
});
